using BinaryProvider # requires BinaryProvider 0.3.0 or later

evalfile("build_GMP.v6.1.2.jl")

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libglpk"], :libglpk),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/juan-pablo-vielma/GLPKBuilder/releases/download/v4.65-beta"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/GLPKBuilder.v1.0.0.aarch64-linux-gnu.tar.gz", "849430907b34057eac1a1b14e102a4066d9cfb243c332d808b5f5110d5a86d45"),
    Linux(:aarch64, :musl) => ("$bin_prefix/GLPKBuilder.v1.0.0.aarch64-linux-musl.tar.gz", "ddf671fbd6e4a7b065b1cbf07483178085a81674bc4e5c512f7a6bd3de8029ed"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/GLPKBuilder.v1.0.0.arm-linux-gnueabihf.tar.gz", "60c114989978212c93209dfe7381987950b7244bef153f89f1ada952c743c6bc"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/GLPKBuilder.v1.0.0.arm-linux-musleabihf.tar.gz", "3300185d97f28fbcce9763ce8d12d0474c82a8ae6e7900cb4d349aa1497a596f"),
    Linux(:i686, :glibc) => ("$bin_prefix/GLPKBuilder.v1.0.0.i686-linux-gnu.tar.gz", "5892c9a52c2e5430f9be696a148218c31e426b7a35254f09ec80d310cf3f48bf"),
    Linux(:i686, :musl) => ("$bin_prefix/GLPKBuilder.v1.0.0.i686-linux-musl.tar.gz", "8fbb89d0c7745975d89ba84264a226f3a7dbc5f0097d00ad7e993f20ac24d1a1"),
    Windows(:i686) => ("$bin_prefix/GLPKBuilder.v1.0.0.i686-w64-mingw32.tar.gz", "a00fbf841c0f0e200a49e17b99ab310df4c39213611f6da5f4da4e6500e80ca9"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/GLPKBuilder.v1.0.0.powerpc64le-linux-gnu.tar.gz", "ba2fad6e35d651fb41e76784d8319ef3d83fb4393d7c5aeeebb219220c86fae6"),
    MacOS(:x86_64) => ("$bin_prefix/GLPKBuilder.v1.0.0.x86_64-apple-darwin14.tar.gz", "15b6825fc981178bcf87bcf974d1e45c7d4e3440a66aa64f6877154bd97e9689"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/GLPKBuilder.v1.0.0.x86_64-linux-gnu.tar.gz", "56eefd5f231b5649d882c1f935a1260103410c7aaf8296a2ef7d1902bdc6ae54"),
    Linux(:x86_64, :musl) => ("$bin_prefix/GLPKBuilder.v1.0.0.x86_64-linux-musl.tar.gz", "881a96ee09b713530408b64c12af00ec37be1870a3321c3602b011153218ab29"),
    Windows(:x86_64) => ("$bin_prefix/GLPKBuilder.v1.0.0.x86_64-w64-mingw32.tar.gz", "956b7bec63c2305f72bf8c0bbfde8316291a802fe8c57be405878e11f6a541eb"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products)
