using BinaryProvider # requires BinaryProvider 0.3.0 or later

evalfile("build_GMP.v6.1.2.jl")

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, String["libglpk"], :libglpk),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/juan-pablo-vielma/GLPKBuilder/releases/download/v4.65-beta"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, :glibc) => ("$bin_prefix/GLPKBuilder.v4.65.0.aarch64-linux-gnu.tar.gz", "521d26cfa56e101bc0a19e47b05d76c77a45ff7e3e5e14024f5597761aac493f"),
    Linux(:aarch64, :musl) => ("$bin_prefix/GLPKBuilder.v4.65.0.aarch64-linux-musl.tar.gz", "cd27f684dd8bd260e976cb43c4a3a98c0da379947fe51d691f9f2bd161a89b03"),
    Linux(:armv7l, :glibc, :eabihf) => ("$bin_prefix/GLPKBuilder.v4.65.0.arm-linux-gnueabihf.tar.gz", "3f49c271fac8afb45b4e403b538b33aa6c3494cf80858a05af348fa04601f2a4"),
    Linux(:armv7l, :musl, :eabihf) => ("$bin_prefix/GLPKBuilder.v4.65.0.arm-linux-musleabihf.tar.gz", "789f68ed3c5fdbec262dea63ceba26033f4791ca81e1fe4eaccbda6cc480ca73"),
    Linux(:i686, :glibc) => ("$bin_prefix/GLPKBuilder.v4.65.0.i686-linux-gnu.tar.gz", "d1af8095f818b34f9d2391fc7d1ccfdaf7e6c9b8f44d4747602c76f0c7756c20"),
    Linux(:i686, :musl) => ("$bin_prefix/GLPKBuilder.v4.65.0.i686-linux-musl.tar.gz", "583e63e84e0776e16f2e356c48a57eebf69440aa6c08c0715429892321d2b62a"),
    Windows(:i686) => ("$bin_prefix/GLPKBuilder.v4.65.0.i686-w64-mingw32.tar.gz", "ca6e27666f3dfa9db9b801774b5ed35e3f228bd509234b0b4a198e00b9a2057a"),
    Linux(:powerpc64le, :glibc) => ("$bin_prefix/GLPKBuilder.v4.65.0.powerpc64le-linux-gnu.tar.gz", "39c3d317c28431c36c42fb9f033b8aedd8b1200940089be44cc03a760d65c00a"),
    MacOS(:x86_64) => ("$bin_prefix/GLPKBuilder.v4.65.0.x86_64-apple-darwin14.tar.gz", "f7d0c073ffc0fff2e97fcc946fc4e5214333248241624ec4f31afad74df92a36"),
    Linux(:x86_64, :glibc) => ("$bin_prefix/GLPKBuilder.v4.65.0.x86_64-linux-gnu.tar.gz", "d1d90ccecc905f0e9125628c46b4ce67342e2e30db3830e532cd32477586070d"),
    Linux(:x86_64, :musl) => ("$bin_prefix/GLPKBuilder.v4.65.0.x86_64-linux-musl.tar.gz", "7df2916c944738f992bb8a1bc099a6fb5d8edccb924bb9f3ba06745d7d55c24b"),
    Windows(:x86_64) => ("$bin_prefix/GLPKBuilder.v4.65.0.x86_64-w64-mingw32.tar.gz", "768d7527398a10efa6fe142aed433723fabc5af87dcb31ca538b482ba9c1ea11"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
if haskey(download_info, platform_key())
    url, tarball_hash = download_info[platform_key()]
    if unsatisfied || !isinstalled(url, tarball_hash; prefix=prefix)
        # Download and install binaries
        install(url, tarball_hash; prefix=prefix, force=true, verbose=verbose)
    end
elseif unsatisfied
    # If we don't have a BinaryProvider-compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform $(triplet(platform_key())) is not supported by this package!")
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)

